apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-11-17T11:03:23Z"
    generateName: vault-
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault
      component: server
      controller-revision-hash: vault-5899b97b9c
      helm.sh/chart: vault-0.27.0
      statefulset.kubernetes.io/pod-name: vault-0
    name: vault-0
    namespace: vault
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: vault
      uid: 8815fc5b-dafc-47ed-b768-59b0f8b8a165
    resourceVersion: "45108"
    uid: 5e2b59ee-2536-4b35-aeb8-5a599ff0219b
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: vault
              app.kubernetes.io/name: vault
              component: server
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - "cp /vault/config/extraconfig-from-values.hcl /tmp/storageconfig.hcl;\n[ -n
        \"${HOST_IP}\" ] && sed -Ei \"s|HOST_IP|${HOST_IP?}|g\" /tmp/storageconfig.hcl;\n[
        -n \"${POD_IP}\" ] && sed -Ei \"s|POD_IP|${POD_IP?}|g\" /tmp/storageconfig.hcl;\n[
        -n \"${HOSTNAME}\" ] && sed -Ei \"s|HOSTNAME|${HOSTNAME?}|g\" /tmp/storageconfig.hcl;\n[
        -n \"${API_ADDR}\" ] && sed -Ei \"s|API_ADDR|${API_ADDR?}|g\" /tmp/storageconfig.hcl;\n[
        -n \"${TRANSIT_ADDR}\" ] && sed -Ei \"s|TRANSIT_ADDR|${TRANSIT_ADDR?}|g\"
        /tmp/storageconfig.hcl;\n[ -n \"${RAFT_ADDR}\" ] && sed -Ei \"s|RAFT_ADDR|${RAFT_ADDR?}|g\"
        /tmp/storageconfig.hcl;\n/usr/local/bin/docker-entrypoint.sh vault server
        -config=/tmp/storageconfig.hcl \n"
      command:
      - /bin/sh
      - -ec
      env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: VAULT_K8S_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: VAULT_K8S_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: VAULT_ADDR
        value: http://127.0.0.1:8200
      - name: VAULT_API_ADDR
        value: http://$(POD_IP):8200
      - name: SKIP_CHOWN
        value: "true"
      - name: SKIP_SETCAP
        value: "true"
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: VAULT_CLUSTER_ADDR
        value: https://$(HOSTNAME).vault-internal:8201
      - name: HOME
        value: /home/vault
      image: hashicorp/vault:1.15.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - sleep 5 && kill -SIGTERM $(pidof vault)
      name: vault
      ports:
      - containerPort: 8200
        name: http
        protocol: TCP
      - containerPort: 8201
        name: https-internal
        protocol: TCP
      - containerPort: 8202
        name: http-rep
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -ec
          - vault status -tls-skip-verify
        failureThreshold: 2
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /vault/data
        name: data
      - mountPath: /vault/config
        name: config
      - mountPath: /home/vault
        name: home
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4j7r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: vault-0
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 100
    serviceAccount: vault
    serviceAccountName: vault
    subdomain: vault-internal
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-vault-0
    - configMap:
        defaultMode: 420
        name: vault-config
      name: config
    - emptyDir: {}
      name: home
    - name: kube-api-access-f4j7r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-11-17T11:03:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-11-17T11:03:24Z"
      message: 'containers with unready status: [vault]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-11-17T11:03:24Z"
      message: 'containers with unready status: [vault]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-11-17T11:03:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ae2e6819049cdf18e4334f1c8e32ac64af83b59e2eb18d51f15611a04fa1b690
      image: hashicorp/vault:1.15.2
      imageID: docker-pullable://hashicorp/vault@sha256:6b4e5dadf082cb3587930ced09b52851c5ae9f8d1c7df31ed39f0085a3029f63
      lastState: {}
      name: vault
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-11-17T11:03:26Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 10.1.0.114
    podIPs:
    - ip: 10.1.0.114
    qosClass: BestEffort
    startTime: "2023-11-17T11:03:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-11-17T11:03:03Z"
    generateName: vault-agent-injector-7f7f68d457-
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault-agent-injector
      component: webhook
      pod-template-hash: 7f7f68d457
    name: vault-agent-injector-7f7f68d457-b4tlp
    namespace: vault
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: vault-agent-injector-7f7f68d457
      uid: 023830ad-fd04-454f-8591-da0738607f11
    resourceVersion: "45072"
    uid: 7e315ee2-b3ad-4bc1-9a23-abc7e94f79c8
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: vault
              app.kubernetes.io/name: vault-agent-injector
              component: webhook
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - agent-inject
      - 2>&1
      env:
      - name: AGENT_INJECT_LISTEN
        value: :8080
      - name: AGENT_INJECT_LOG_LEVEL
        value: info
      - name: AGENT_INJECT_VAULT_ADDR
        value: http://vault.vault.svc:8200
      - name: AGENT_INJECT_VAULT_AUTH_PATH
        value: auth/kubernetes
      - name: AGENT_INJECT_VAULT_IMAGE
        value: hashicorp/vault:1.15.2
      - name: AGENT_INJECT_TLS_AUTO
        value: vault-agent-injector-cfg
      - name: AGENT_INJECT_TLS_AUTO_HOSTS
        value: vault-agent-injector-svc,vault-agent-injector-svc.vault,vault-agent-injector-svc.vault.svc
      - name: AGENT_INJECT_LOG_FORMAT
        value: standard
      - name: AGENT_INJECT_REVOKE_ON_SHUTDOWN
        value: "false"
      - name: AGENT_INJECT_CPU_REQUEST
        value: 250m
      - name: AGENT_INJECT_CPU_LIMIT
        value: 500m
      - name: AGENT_INJECT_MEM_REQUEST
        value: 64Mi
      - name: AGENT_INJECT_MEM_LIMIT
        value: 128Mi
      - name: AGENT_INJECT_DEFAULT_TEMPLATE
        value: map
      - name: AGENT_INJECT_TEMPLATE_CONFIG_EXIT_ON_RETRY_FAILURE
        value: "true"
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: hashicorp/vault-k8s:1.3.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 2
        httpGet:
          path: /health/ready
          port: 8080
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar-injector
      readinessProbe:
        failureThreshold: 2
        httpGet:
          path: /health/ready
          port: 8080
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      startupProbe:
        failureThreshold: 12
        httpGet:
          path: /health/ready
          port: 8080
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bnlbn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 100
    serviceAccount: vault-agent-injector
    serviceAccountName: vault-agent-injector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bnlbn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-11-17T11:03:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-11-17T11:03:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-11-17T11:03:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-11-17T11:03:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f2054a4fc502faa55cd0d36ba79bae7d87ece6c5e8ad621a36713504375ae01b
      image: hashicorp/vault-k8s:1.3.1
      imageID: docker-pullable://hashicorp/vault-k8s@sha256:5d74a885ae3e3c0941ef41a959b241287eed3569fb799899449807ddc01bb6d4
      lastState: {}
      name: sidecar-injector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-11-17T11:03:11Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 10.1.0.113
    podIPs:
    - ip: 10.1.0.113
    qosClass: BestEffort
    startTime: "2023-11-17T11:03:06Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: vault
      meta.helm.sh/release-namespace: vault
    creationTimestamp: "2023-11-17T08:54:37Z"
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
      helm.sh/chart: vault-0.27.0
    name: vault
    namespace: vault
    resourceVersion: "43355"
    uid: aeb31cd2-d1a0-4bc6-bcb6-c107750479c2
  spec:
    clusterIP: 10.104.231.36
    clusterIPs:
    - 10.104.231.36
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 32345
      port: 8200
      protocol: TCP
      targetPort: 8200
    - name: https-internal
      nodePort: 30878
      port: 8201
      protocol: TCP
      targetPort: 8201
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault
      component: server
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer:
      ingress:
      - hostname: localhost
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: vault
      meta.helm.sh/release-namespace: vault
    creationTimestamp: "2023-11-17T08:54:37Z"
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault-agent-injector
    name: vault-agent-injector-svc
    namespace: vault
    resourceVersion: "35390"
    uid: fef0a9c5-7ef8-4f5b-827f-5781abd5f101
  spec:
    clusterIP: 10.104.244.64
    clusterIPs:
    - 10.104.244.64
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault-agent-injector
      component: webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: vault
      meta.helm.sh/release-namespace: vault
    creationTimestamp: "2023-11-17T08:54:37Z"
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
      helm.sh/chart: vault-0.27.0
      vault-internal: "true"
    name: vault-internal
    namespace: vault
    resourceVersion: "35382"
    uid: 254572ec-9330-40d2-8396-c98b0a189b38
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8200
      protocol: TCP
      targetPort: 8200
    - name: https-internal
      port: 8201
      protocol: TCP
      targetPort: 8201
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault
      component: server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: vault
      meta.helm.sh/release-namespace: vault
    creationTimestamp: "2023-11-17T08:54:38Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault-agent-injector
      component: webhook
    name: vault-agent-injector
    namespace: vault
    resourceVersion: "45076"
    uid: 082e97ed-cedf-4a5d-ba3e-2a664797b31d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: vault
        app.kubernetes.io/name: vault-agent-injector
        component: webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: vault
          app.kubernetes.io/name: vault-agent-injector
          component: webhook
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: vault
                  app.kubernetes.io/name: vault-agent-injector
                  component: webhook
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - agent-inject
          - 2>&1
          env:
          - name: AGENT_INJECT_LISTEN
            value: :8080
          - name: AGENT_INJECT_LOG_LEVEL
            value: info
          - name: AGENT_INJECT_VAULT_ADDR
            value: http://vault.vault.svc:8200
          - name: AGENT_INJECT_VAULT_AUTH_PATH
            value: auth/kubernetes
          - name: AGENT_INJECT_VAULT_IMAGE
            value: hashicorp/vault:1.15.2
          - name: AGENT_INJECT_TLS_AUTO
            value: vault-agent-injector-cfg
          - name: AGENT_INJECT_TLS_AUTO_HOSTS
            value: vault-agent-injector-svc,vault-agent-injector-svc.vault,vault-agent-injector-svc.vault.svc
          - name: AGENT_INJECT_LOG_FORMAT
            value: standard
          - name: AGENT_INJECT_REVOKE_ON_SHUTDOWN
            value: "false"
          - name: AGENT_INJECT_CPU_REQUEST
            value: 250m
          - name: AGENT_INJECT_CPU_LIMIT
            value: 500m
          - name: AGENT_INJECT_MEM_REQUEST
            value: 64Mi
          - name: AGENT_INJECT_MEM_LIMIT
            value: 128Mi
          - name: AGENT_INJECT_DEFAULT_TEMPLATE
            value: map
          - name: AGENT_INJECT_TEMPLATE_CONFIG_EXIT_ON_RETRY_FAILURE
            value: "true"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: hashicorp/vault-k8s:1.3.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar-injector
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 100
        serviceAccount: vault-agent-injector
        serviceAccountName: vault-agent-injector
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-11-17T08:54:38Z"
      lastUpdateTime: "2023-11-17T08:56:01Z"
      message: ReplicaSet "vault-agent-injector-7f7f68d457" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-11-17T11:03:17Z"
      lastUpdateTime: "2023-11-17T11:03:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: vault
      meta.helm.sh/release-namespace: vault
    creationTimestamp: "2023-11-17T08:54:38Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault-agent-injector
      component: webhook
      pod-template-hash: 7f7f68d457
    name: vault-agent-injector-7f7f68d457
    namespace: vault
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: vault-agent-injector
      uid: 082e97ed-cedf-4a5d-ba3e-2a664797b31d
    resourceVersion: "45075"
    uid: 023830ad-fd04-454f-8591-da0738607f11
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: vault
        app.kubernetes.io/name: vault-agent-injector
        component: webhook
        pod-template-hash: 7f7f68d457
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: vault
          app.kubernetes.io/name: vault-agent-injector
          component: webhook
          pod-template-hash: 7f7f68d457
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: vault
                  app.kubernetes.io/name: vault-agent-injector
                  component: webhook
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - agent-inject
          - 2>&1
          env:
          - name: AGENT_INJECT_LISTEN
            value: :8080
          - name: AGENT_INJECT_LOG_LEVEL
            value: info
          - name: AGENT_INJECT_VAULT_ADDR
            value: http://vault.vault.svc:8200
          - name: AGENT_INJECT_VAULT_AUTH_PATH
            value: auth/kubernetes
          - name: AGENT_INJECT_VAULT_IMAGE
            value: hashicorp/vault:1.15.2
          - name: AGENT_INJECT_TLS_AUTO
            value: vault-agent-injector-cfg
          - name: AGENT_INJECT_TLS_AUTO_HOSTS
            value: vault-agent-injector-svc,vault-agent-injector-svc.vault,vault-agent-injector-svc.vault.svc
          - name: AGENT_INJECT_LOG_FORMAT
            value: standard
          - name: AGENT_INJECT_REVOKE_ON_SHUTDOWN
            value: "false"
          - name: AGENT_INJECT_CPU_REQUEST
            value: 250m
          - name: AGENT_INJECT_CPU_LIMIT
            value: 500m
          - name: AGENT_INJECT_MEM_REQUEST
            value: 64Mi
          - name: AGENT_INJECT_MEM_LIMIT
            value: 128Mi
          - name: AGENT_INJECT_DEFAULT_TEMPLATE
            value: map
          - name: AGENT_INJECT_TEMPLATE_CONFIG_EXIT_ON_RETRY_FAILURE
            value: "true"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: hashicorp/vault-k8s:1.3.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar-injector
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 100
        serviceAccount: vault-agent-injector
        serviceAccountName: vault-agent-injector
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: vault
      meta.helm.sh/release-namespace: vault
    creationTimestamp: "2023-11-17T08:54:38Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
    name: vault
    namespace: vault
    resourceVersion: "45099"
    uid: 8815fc5b-dafc-47ed-b768-59b0f8b8a165
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: vault
        app.kubernetes.io/name: vault
        component: server
    serviceName: vault-internal
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: vault
          app.kubernetes.io/name: vault
          component: server
          helm.sh/chart: vault-0.27.0
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: vault
                  app.kubernetes.io/name: vault
                  component: server
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - "cp /vault/config/extraconfig-from-values.hcl /tmp/storageconfig.hcl;\n[
            -n \"${HOST_IP}\" ] && sed -Ei \"s|HOST_IP|${HOST_IP?}|g\" /tmp/storageconfig.hcl;\n[
            -n \"${POD_IP}\" ] && sed -Ei \"s|POD_IP|${POD_IP?}|g\" /tmp/storageconfig.hcl;\n[
            -n \"${HOSTNAME}\" ] && sed -Ei \"s|HOSTNAME|${HOSTNAME?}|g\" /tmp/storageconfig.hcl;\n[
            -n \"${API_ADDR}\" ] && sed -Ei \"s|API_ADDR|${API_ADDR?}|g\" /tmp/storageconfig.hcl;\n[
            -n \"${TRANSIT_ADDR}\" ] && sed -Ei \"s|TRANSIT_ADDR|${TRANSIT_ADDR?}|g\"
            /tmp/storageconfig.hcl;\n[ -n \"${RAFT_ADDR}\" ] && sed -Ei \"s|RAFT_ADDR|${RAFT_ADDR?}|g\"
            /tmp/storageconfig.hcl;\n/usr/local/bin/docker-entrypoint.sh vault server
            -config=/tmp/storageconfig.hcl \n"
          command:
          - /bin/sh
          - -ec
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: VAULT_K8S_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: VAULT_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: VAULT_ADDR
            value: http://127.0.0.1:8200
          - name: VAULT_API_ADDR
            value: http://$(POD_IP):8200
          - name: SKIP_CHOWN
            value: "true"
          - name: SKIP_SETCAP
            value: "true"
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: VAULT_CLUSTER_ADDR
            value: https://$(HOSTNAME).vault-internal:8201
          - name: HOME
            value: /home/vault
          image: hashicorp/vault:1.15.2
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - sleep 5 && kill -SIGTERM $(pidof vault)
          name: vault
          ports:
          - containerPort: 8200
            name: http
            protocol: TCP
          - containerPort: 8201
            name: https-internal
            protocol: TCP
          - containerPort: 8202
            name: http-rep
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -ec
              - vault status -tls-skip-verify
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /vault/data
            name: data
          - mountPath: /vault/config
            name: config
          - mountPath: /home/vault
            name: home
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 100
        serviceAccount: vault
        serviceAccountName: vault
        terminationGracePeriodSeconds: 10
        volumes:
        - configMap:
            defaultMode: 420
            name: vault-config
          name: config
        - emptyDir: {}
          name: home
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 0
    collisionCount: 0
    currentReplicas: 1
    currentRevision: vault-5899b97b9c
    observedGeneration: 1
    replicas: 1
    updateRevision: vault-5899b97b9c
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
